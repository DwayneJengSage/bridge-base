group = 'org.sagebionetworks'
ext.name = 'bridge-base'
version = '1.0'

/*** Java ***/

apply plugin: 'java'

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

jar {
    group = project.group
    baseName = project.ext.name
    version = project.version
}

repositories {
    mavenCentral()
}

dependencies {
    compile 'com.amazonaws:aws-java-sdk-dynamodb:' + awsVer
    compile 'com.amazonaws:aws-java-sdk-sqs:' + awsVer
    compile 'com.google.guava:guava:' + guavaVer
    compile 'com.jcabi:jcabi-aspects:0.22.1'
    compile 'commons-codec:commons-codec:' + commonsCodecVer
    compile 'joda-time:joda-time:' + jodaVer
    compile 'org.apache.commons:commons-lang3:' + commonsLang3Ver
    compile 'org.apache.shiro:shiro-core:' + shiroVer
    compile 'org.bouncycastle:bcpkix-jdk15on:' + bcVer
    compile 'org.bouncycastle:bcprov-jdk15on:' + bcVer
    compile 'org.mockito:mockito-core:' + mockitoVer
    compile 'redis.clients:jedis:' + redisVer
    testCompile 'nl.jqno.equalsverifier:equalsverifier:1.7.2'
    testCompile 'org.testng:testng:6.1.1'
    testRuntime 'ch.qos.logback:logback-classic:' + logbackVer
    testRuntime 'ch.qos.logback:logback-core:' + logbackVer
}

test.useTestNG()

/*** AspectJ settings ***/
buildscript {
    repositories {
        maven {
            url "https://maven.eveoh.nl/content/repositories/releases"
        }
    }

    dependencies {
        classpath "nl.eveoh:gradle-aspectj:1.6"
    }
}

project.ext {
    aspectjVersion = '1.8.7'
}

apply plugin: 'aspectj'

dependencies {
    aspectpath 'com.jcabi:jcabi-aspects:0.22.1'
    testAspectpath 'com.jcabi:jcabi-aspects:0.22.1'
}

compileAspect {
    xlint = 'warning'
}

/*** IDE ***/

apply plugin: 'eclipse'
apply plugin: 'idea'

/*** Code Quality Tools ***/

apply plugin: 'findbugs'
tasks.withType(FindBugs) {
    reports {
        xml.enabled = false
        html.enabled = true
    }
}
findbugs {
    sourceSets = [sourceSets.main]
}

apply plugin: 'jdepend'
tasks.withType(JDepend) {
    reports {
        xml.enabled = false
        text.enabled = true
    }
}

apply plugin: 'pmd'
tasks.withType(Pmd) {
    reports {
        xml.enabled = false
        html.enabled = true
    }
}

apply plugin: 'jacoco'
jacocoTestReport {
    reports {
        xml.enabled = false
        csv.enabled = false
    }
}

/*** Wrapper ***/

task wrapper(type: Wrapper) {
    gradleVersion = '2.6'
}

/*** Maven publishing ***/

apply plugin: 'maven-publish'

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
    repositories {
        maven {
            url "s3://${System.env.REPO_MAVEN_BUCKET}"
            credentials(AwsCredentials) {
                accessKey "${System.env.REPO_PUBLISHER_KEY}"
                secretKey "${System.env.REPO_PUBLISHER_SECRET}"
            }
        }
    }
}
